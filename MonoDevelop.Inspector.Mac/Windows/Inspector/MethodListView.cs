// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

namespace MonoDevelop.Inspector.Mac
{
	class MethodTableViewItem : TableViewItem
	{
		public MethodInfo MethodInfo;

		public MethodTableViewItem(MethodInfo method, string name) : base(name)
		{
			MethodInfo = method;
		}
	}

	class MethodListView : TableView
	{
		public bool ShowAllMethods { get; set; }
		public void SetObject (object element, string filter)
		{
			List<MethodInfo> methodInfos;
            TranslatesAutoresizingMaskIntoConstraints = false;

            if (element != null) {
                methodInfos = element.GetType()
                       .GetMethods(BindingFlags.Public | BindingFlags.Instance)

        //}
        //else
        //{
        //methodInfos = element.GetType()
        //.GetRuntimeMethods()
        .ToList();
            }
            else
            {
                methodInfos = new List<MethodInfo>();
            }

            var tableItems = new List<TableViewItem>();
			foreach (var method in methodInfos) {
                var name = method.ToString();
                if (string.IsNullOrEmpty (filter) || name.IndexOf (filter, StringComparison.OrdinalIgnoreCase) > -1)
				tableItems.Add (new MethodTableViewItem(method, name));
			}
			SetData (tableItems);
		}
	}
}
